@page "/"
@inject NavigationManager Navigation
@using Base.Service.Contracts
@inject IAppState AppState

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">ITaxi</MudText>
        <MudSpacer />
        @if (AppState.IsLoggedIn)
        {
            <div>
               <MudNavLink Href="/profile">Hello, @AuthResponse?.FirstAndLastName!</MudNavLink>
                </div>
            <MudIconButton Icon=@Icons.Material.Filled.Logout OnClick="LogOut" class="nav-link btn btn-link">Log out</MudIconButton>
        }
        else
        {
            <MudIconButton Href="/registerDriver" Style="color:white" class="nav-link btn btn-link">Register Driver</MudIconButton>
            <MudIconButton Href="/registerCustomer" Style="color:white" class="nav-link btn btn-link">Register Customer</MudIconButton>
            <MudIconButton Href="/login" Icon=@Icons.Material.Filled.Login Edge="Edge.End" class="nav-link btn btn-link">Log in</MudIconButton>
            
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Docked" Elevation="2">
        
    </MudDrawer>
    <MudMainContent>
        <MudText Typo="Typo.h1" GutterBottom="true">Welcome!</MudText>
        <MudText Class="mb-8">Welcome to ITaxi, powered by MudBlazor!</MudText>
       
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    public bool? IsAuthenicated { get; set; }
    [CascadingParameter]
    public IAuthResponse? AuthResponse { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public async Task LogOut()
    {
        await AppState.SetAuthResponse(null);
        
         await AppState.ResetAuthState();
        IsAuthenicated = false;
        
        Navigation.NavigateTo("/");

    }
}