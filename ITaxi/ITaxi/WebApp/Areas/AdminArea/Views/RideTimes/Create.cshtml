@using App.Resources.Areas.App.Domain.AdminArea
@using Base.Resources
@model WebApp.Areas.AdminArea.ViewModels.CreateRideTimeViewModel

@{
    ViewData["Title"] = Common.Create;
}

<h1>@Common.Create</h1>

<h4>@RideTime.RideDateAndTime</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>

            <partial name="AdminArea/PartialViews/_CreateEditRideTime" model="Model"/>

            <div class="form-group">
                <input type="submit" value="@Common.Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Common.BackToList</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

<script>
     
    function driverIdChanged (value) {

        let content = { 
            listType: 'DriverId',
            value: value.toString()
        }
        
        fetch('@Url.Action("SetDropDownList")', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json; charset=UTF-8'
            },
            body: JSON.stringify(content)
        }).then(response => {
            response.json().then(data => {
                PopulateDropDownList("ScheduleId", data.schedules, false);
                PopulateDropDownList("SelectedRideTimes", data.rideTimes, true);
            });
        });
    }
    
    function scheduleIdChanged (value) {
        if (!value) return;
        
            let content = { 
                listType: 'ScheduleId',
                value: value.toString()
            }
            
            fetch('@Url.Action("SetDropDownList")', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify(content)
            }).then(response => {
                response.json().then(data => {
                    PopulateDropDownList("SelectedRideTimes", data.rideTimes, true);
                });
            });
        }
   

</script>
}