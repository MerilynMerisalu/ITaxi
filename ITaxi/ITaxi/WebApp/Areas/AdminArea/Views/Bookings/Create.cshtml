@using App.Resources.Areas.App.Domain.AdminArea
@using Base.Resources
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = Common.Create;
}

<h1>@Common.Create</h1>

<h4>@Booking.BookingName</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>
            <partial name="AdminArea/PartialViews/_CreateEditBooking" model="Model"/>
            <div class="form-group">
                <input type="submit" value="@Common.Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Common.BackToList</a>
</div>

@section Scripts {
    <script>
        function pickupDateAndTimeChanged (value) {
    
            let content = { 
                listType: 'PickUpDateAndTime',
                value: value.toString(),
                vehicleTypeId: document.getElementById('VehicleTypeId').value.toString(),
                cityId: document.getElementById('CityId').value.toString()
            };
            
            if (content.vehicleTypeId.length === 0 || content.vehicleTypeId === 'Please Select') {
                alert('You must select the Vehicle Type first');
            }
            else if( content.cityId.length === 0 || content.cityId === 'Please Select') {
                 alert('You must select the City first');
            }
            else {
                fetch('@Url.Action("SetDropDownList")', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json; charset=UTF-8'
                    },
                    body: JSON.stringify(content)
                }).then(response => {
                    response.json().then(data => {
                        
                        if (data.scheduleId) {
                            PopulateDropDownList("ScheduleId", data.schedules, false, data.scheduleId);
                            PopulateDropDownList("DriverId", data.drivers, false, data.driverId);
                            PopulateDropDownList("VehicleId", data.vehicles, false, data.vehicleId);
                        }
                        else {
                            alert('No drivers are available at this time, please select another time.');
                        }
                    });
                });
            }
        }
        
      
    
    </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}