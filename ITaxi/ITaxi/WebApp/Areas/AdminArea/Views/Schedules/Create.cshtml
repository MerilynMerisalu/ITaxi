@using App.Resources.Areas.App.Domain.AdminArea
@using Base.Resources
@model WebApp.Areas.AdminArea.ViewModels.CreateScheduleViewModel

@{
    ViewData["Title"] = Common.Create;
}

<h1>@Common.Create</h1>

<h4>@Schedule.ScheduleName</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DriverId" class="control-label"></label>
                <select asp-for="DriverId" class="form-control" asp-items="Model.Drivers"
                        onchange="DriverIdChanged(this.value)">
                    <option>@Common.PleaseSelect</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="VehicleId" class="control-label"></label>
                <select asp-for="VehicleId" class="form-control" asp-items="Model.Vehicles">
                <option>@Common.PleaseSelect</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="StartDateAndTime" class="control-label"></label>
                <input asp-for="StartDateAndTime" class="form-control"/>
                <span asp-validation-for="StartDateAndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDateAndTime" class="control-label"></label>
                <input asp-for="EndDateAndTime" class="form-control"/>
                <span asp-validation-for="EndDateAndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Common.Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Common.BackToList</a>
</div>
<script type="text/javascript">

function DriverIdChanged(value) {
  if (!value) {
      return;
      }
  fetch('@Url.Action("SetDropDownList")/' + value.toString(), {
      method: "POST",
      headers: {
          'Accept': "application/json",
          'Content-Type': 'application/json, charset=UTF-8'
          },
  }).then(response => {
      response.json().then(data => {
          PopulateDropDownList("VehicleId", data.vehicles)
      })
  })
}

function PopulateDropDownList(dropdownId, list) {
  let ddl = document.getElementById(dropdownId);
  while (ddl.length > 1) 
  {
      ddl.remove();
  }
  list.forEach(item => {
      let opt = new Option(item.text, item.value);
      if (ddl.length === 0) {
          opt.selected = true;
          
      }
      list.add(opt)
  })
}
</script>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}